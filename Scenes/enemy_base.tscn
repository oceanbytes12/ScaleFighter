[gd_scene load_steps=11 format=3 uid="uid://x0n0c5j1r8ib"]

[ext_resource type="Shader" path="res://Visual/Shaders/hitEffect.gdshader" id="1_8bcq5"]
[ext_resource type="Texture2D" uid="uid://cg6ubjm7oml8t" path="res://Visual/Sprites/combatDummy.png" id="2_6f848"]

[sub_resource type="GDScript" id="GDScript_y3kff"]
script/source = "extends CharacterBody2D

class_name Boss

signal take_damage

@export var DAMAGE = 5
@export var SPEED = 100.0
@export var TARGET : Player
@export var MIN_DISTANCE = .8
@export var KNOCKBACK = 10

# Get the gravity from the project settings to be synced with RigidBody nodes.
#var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var gravity = 10000

@onready var cooldown_timer = $CooldownTimer

var isPlayerInRange = false # Is player in range for attack? 
var isCoolingDown = false #Are we still cooling down?
var isAttacking = false # Are we currently playing an attack animation?
var stunned = false

func _ready():
	$AnimationPlayer.play(\"idle\")
	if TARGET == null:
		push_error(\"ERROR: Enemy does not have a valid TARGET set\")
	
func _process(delta):
	if(TARGET):
		var target_vector = TARGET.global_position - global_position
		if target_vector.x < 0:
			$Sprite2D.flip_h = false
		elif target_vector.x > 0:
			$Sprite2D.flip_h = true

func _physics_process(delta):
	if(stunned):
		return
	
	if isAttacking:
		# Don't move if currently attacking
		velocity = Vector2.ZERO
		
	elif isPlayerInRange && !isCoolingDown:
		DoAttack()
		
	else: 
		# Move towards target
		var direction = Vector2.ZERO
		if(TARGET):
			direction = TARGET.position - position
			
		direction = direction.normalized()
		direction.y = 0 # Stop following the player on the y axis
		if (abs(direction.x) > MIN_DISTANCE):
			velocity = direction * SPEED
		
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	move_and_slide()

func DoAttack():
	# Randomly choose an attack
	#var gen = RandomNumberGenerator.new()
	#var random_num = gen.rand_range(1, 3)
	#
	#match random_num:
		#1:
			#Attack1()
		#2:
			#Attack2()
		#3:
			#Attack3()

	# For now, just has one attack
	Attack1() 

func Attack1():
	print(\"Attack1 called\")
	DoAttackAnimation()
	
func Attack2():
	pass
	
func Attack3():
	pass

func DoAttackAnimation():
	isAttacking = true
	cooldown_timer.start()
	isCoolingDown = true
	TARGET.take_hit(global_position, DAMAGE, KNOCKBACK)
	
	# Temporary:
	isAttacking = false # LATER: Have a signal at the end of the animation that sets this back to false

func _on_attack_range_body_entered(body):
	if body == TARGET:
		print(\"player in attackable range\")
		isPlayerInRange = true

func _on_attack_range_body_exited(body):
	if body == TARGET:
		print(\"player out of attackable range\")
		isPlayerInRange = false

func _on_cooldown_timer_timeout():
	print(\"Can attack again\")
	isCoolingDown = false

func _on_attack_effect_animation_finished():
	print(\"Animation finished\")
	isAttacking = false

# Hook this up to an HP Bar
func take_hit(hit_position, damage, knockback):
	var direction = (global_position-hit_position).normalized()
	velocity = direction  * knockback
	$AnimationPlayer.play(\"hit\")
	take_damage.emit(damage)
	if(damage > 10):
		stunned = true
		await get_tree().create_timer(5).timeout
		stunned = false
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_je0ey"]
shader = ExtResource("1_8bcq5")
shader_parameter/flash_opacity = 1.0
shader_parameter/flash_color = Color(1, 1, 1, 1)

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_3v36j"]
height = 35.97

[sub_resource type="CircleShape2D" id="CircleShape2D_sgu66"]
radius = 32.0

[sub_resource type="Animation" id="Animation_hj0kt"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:material:shader_parameter/flash_opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.0]
}

[sub_resource type="Animation" id="Animation_k0akd"]
resource_name = "hit"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:material:shader_parameter/flash_opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.0, 0.0]
}

[sub_resource type="Animation" id="Animation_8u388"]
resource_name = "idle"
length = 0.3
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:material:shader_parameter/flash_opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_vwa3k"]
_data = {
"RESET": SubResource("Animation_hj0kt"),
"hit": SubResource("Animation_k0akd"),
"idle": SubResource("Animation_8u388")
}

[node name="Enemy_Base" type="CharacterBody2D"]
script = SubResource("GDScript_y3kff")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_je0ey")
texture = ExtResource("2_6f848")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -0.985)
shape = SubResource("CapsuleShape2D_3v36j")

[node name="AttackRange" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="AttackRange"]
shape = SubResource("CircleShape2D_sgu66")

[node name="CooldownTimer" type="Timer" parent="."]
wait_time = 3.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_vwa3k")
}

[connection signal="body_entered" from="AttackRange" to="." method="_on_attack_range_body_entered"]
[connection signal="body_exited" from="AttackRange" to="." method="_on_attack_range_body_exited"]
[connection signal="timeout" from="CooldownTimer" to="." method="_on_cooldown_timer_timeout"]
